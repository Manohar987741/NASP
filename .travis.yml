#
# https://docs.travis-ci.com/user/customizing-the-build#The-Build-Lifecycle
#
---
# https://docs.travis-ci.com/user/notifications#Configuring-email-notifications
# Turn off email notifications entirely
notifications:
  email: false

language: go
go:
#- '1.0'
#- '1.3'
#- '1.7.x'
- tip
#- master
#language: generic

# TODO: reduce default clone depth?
#
# https://docs.travis-ci.com/user/customizing-the-build#Git-Clone-Depth
# Travis CI clones repositories to a depth of 50 commits, which is only really
# useful if you are performing git operations.
# Please note that if you use a depth of 1 and have a queue of jobs, Travis CI
# wonâ€™t build commits that are in the queue when you push a new commit.
#git:
#  depth: 3

# travis-ci encrypted values
# -------------------------
# https://docs.travis-ci.com/user/encryption-keys/#Fetching-the-public-key-for-your-repository
# Note, travis uses travis.slug in your project to determine the endpoints
# if it exists (check by using git config --local travis.slug), if you rename
# your repo or move your repo to another user/organization, you might need to change it.
#
# Refer to the following documentation for more about travis-ci encrypted values:
# https://docs.travis-ci.com/user/environment-variables/#Defining-encrypted-variables-in-.travis.yml
# https://docs.travis-ci.com/user/encryption-keys
# https://docs.travis-ci.com/user/encrypting-files/
# `travis encrypt MY_SECRET_ENV=super_secret --add env.matrix`
env:
  # global
  # ======
  #
  # https://docs.travis-ci.com/user/environment-variables/#Global-Variables
  #
  # VERSION
  # -------
  # VERSION is either the commit tag or first 8 characters of the commit hash
  #
  # DOCKER_REPOSITORY
  # -----------------
  # Docker image repository. It is expected this will match the Github repository,
  # but it could differ. This primarily servers to document the repositories as
  # separate entities.
  #
  # GO_BUILD_ARGS
  # -------------
  # -x -ldflags "-X main.version=$VERSION"
  # Set the version at compile time to matche the git tag/commit.
  # An alterative:
  #   go build -i -v -ldflags="-X main.version=$(git describe --always --long --dirty)"
  #
  # -ldflags="-s -w"
  # Remove debugging symbols to reduce the binary size.
  #
  # -gcflags=-trimpath=$GOPATH -asmflags=-trimpath=$GOPATH
  # Remove GOPATH prefix from the stacktrace.
  # https://github.com/golang/go/issues/13809#issuecomment-168874760
  global:
    - VERSION="${TRAVIS_TAG:-${TRAVIS_COMMIT:0:8}}"
      #- DOCKER_REPOSITORY="$TRAVIS_REPO_SLUG"
      # The build flags are passed directly because I could not get this to work.
      # Originally the environment variable was a simple string, but I struggled with escaping the inner quotes.
      # Next I tried creating a shell array and passing it as `go build "${GO_BUILD_FLAGS}".
      # While this worked locally, travis-ci parsed it as a series of environment variables
      # i.e. GO_BUILD_ARGS, gcflags, asmflags
      # I also tried removing the '=' and declaring the variable in the script block.
      #- GO_BUILD_ARGS=(-x -ldflags "-X main.version=$VERSION -s -w" -gcflags "-trimpath=$GOPATH" -asmflags "-trimpath=$GOPATH")


# https://docs.travis-ci.com/user/customizing-the-build#The-Build-Lifecycle
# OPTIONAL Install apt addons
# OPTIONAL Install cache components
# before_install
# install
# before_script
# script
# OPTIONAL before_cache (for cleaning up cache)
# after_success or after_failure
# OPTIONAL before_deploy
# OPTIONAL deploy
# OPTIONAL after_deploy
# after_script

# install
# -------
# https://docs.travis-ci.com/user/languages/go#Dependency-Management
# install:
#   - go get -t -v ./...

script:
  - go build -x -ldflags="-X main.version=$VERSION -s -w" -gcflags="-trimpath=$GOPATH" -asmflags="-trimpath=$GOPATH"
  - NASP

# after_success update the Docker latest image.
# If this is tagged commit, create a named image as well
after_success:
  # During testing it was observed the travis API request will be silently dropped
  # if the docker branch does not exist.
  #
  # https://docs.travis-ci.com/user/triggering-builds
  # The %2F in the request URL is required so that the owner and repository name
  # in the repository slug are interpreted as a single URL segment.
  # body='{
  #"request": {
  #"branch":"master"
  #}}'
  # travis env set TRAVIS_API_TOKEN $(travis token | sed 's/Your access token is//')
  # "config": {
  #  "env": {
  #    "matrix": ["TEST=unit"]
  #  },
  #  "script": "echo FOO"
  #}
  - >
    curl -s -X POST \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -H "Travis-API-Version: 3" \
      -H "Authorization: token $TRAVIS_API_TOKEN" \
      -d '{ "request":{ "branch":"docker", "config": { "env": { "global": [ "TRAVIS_TAG=overrideTravisTag" ] } } } }' \
      https://api.travis-ci.org/repo/${TRAVIS_REPO_SLUG/\//%2F}/requests

before_deploy:
  - tar cvzf nasp.tar.gz *

# https://docs.travis-ci.com/user/customizing-the-build#Deploying-your-Code
deploy:
  provider: releases
  api_key:
    secure: $GITHUB_API_TOKEN
  file: nasp.tar.gz
  skip_cleanup: true
  on:
    tags: true
